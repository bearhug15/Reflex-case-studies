strict digraph G {
  1 [ label="Program start" ];
  2 [ label="Program end" ];
  3 [ label="Process start: CarController" ];
  4 [ label="Process end CarController" ];
  5 [ label="State start: waitingForCar" ];
  6 [ label="State end: waitingForCar" ];
  7 [ label="If start" ];
  8 [ label="if end" ];
  9 [ label="Blank node" ];
  10 [ label="Blank node" ];
  11 [ label="Condition: (getVarBool ### ''inp_0'')" ];
  12 [ label="Process change: Opening in Start" ];
  13 [ label="Set state: CarController in waitingForCarPassing" ];
  14 [ label="Blank node" ];
  15 [ label="Blank node" ];
  16 [ label="Condition: (\<not> (getVarBool ### ''inp_0''))" ];
  17 [ label="State start: waitingForCarPassing" ];
  18 [ label="State end: waitingForCarPassing" ];
  19 [ label="If start" ];
  20 [ label="if end" ];
  21 [ label="Blank node" ];
  22 [ label="Blank node" ];
  23 [ label="Condition: (\<not> (getVarBool ### ''inp_0''))" ];
  24 [ label="Set state: CarController in waitingForCar" ];
  25 [ label="Blank node" ];
  26 [ label="Blank node" ];
  27 [ label="Condition: (\<not> (\<not> (getVarBool ### ''inp_0'')))" ];
  28 [ label="State start: stop" ];
  29 [ label="State end: stop" ];
  30 [ label="State start: error" ];
  31 [ label="State end: error" ];
  32 [ label="Process start: Opening" ];
  33 [ label="Process end Opening" ];
  34 [ label="State start: opening" ];
  35 [ label="State end: opening" ];
  36 [ label="Expression: (setVarBool ### ''out_0'' True)" ];
  37 [ label="Expression: (setVarBool ### ''out_1'' False)" ];
  38 [ label="If start" ];
  39 [ label="if end" ];
  40 [ label="Blank node" ];
  41 [ label="Blank node" ];
  42 [ label="Condition: (getVarBool ### ''inp_2'')" ];
  43 [ label="Expression: (setVarBool ### ''out_0'' False)" ];
  44 [ label="Expression: (setVarBool ### ''out_3'' False)" ];
  45 [ label="Expression: (setVarBool ### ''out_2'' True)" ];
  46 [ label="Set state: Opening in open" ];
  47 [ label="Blank node" ];
  48 [ label="Blank node" ];
  49 [ label="Condition: (\<not> (getVarBool ### ''inp_2''))" ];
  50 [ label="State start: open" ];
  51 [ label="State end: open" ];
  52 [ label="If start" ];
  53 [ label="if end" ];
  54 [ label="Blank node" ];
  55 [ label="Blank node" ];
  56 [ label="Condition: (getVarBool ### ''inp_1'')" ];
  57 [ label="Reset: Opening" ];
  58 [ label="Blank node" ];
  59 [ label="Blank node" ];
  60 [ label="Condition: (\<not> (getVarBool ### ''inp_1''))" ];
  61 [ label="Timeout start" ];
  62 [ label="Timeout end" ];
  63 [ label="Condition: (ltime ### ''Opening'' \<ge> 600000)" ];
  64 [ label="Expression: (setVarBool ### ''out_1'' True)" ];
  65 [ label="Expression: (setVarBool ### ''out_2'' False)" ];
  66 [ label="Expression: (setVarBool ### ''out_3'' True)" ];
  67 [ label="Set state: Opening in closing" ];
  68 [ label="Condition: (ltime ### ''Opening'' < 600000)" ];
  69 [ label="State start: closing" ];
  70 [ label="State end: closing" ];
  71 [ label="If start" ];
  72 [ label="if end" ];
  73 [ label="Blank node" ];
  74 [ label="Blank node" ];
  75 [ label="Condition: (getVarBool ### ''inp_3'')" ];
  76 [ label="Expression: (setVarBool ### ''out_1'' False)" ];
  77 [ label="Set state: Opening in stop" ];
  78 [ label="Blank node" ];
  79 [ label="Blank node" ];
  80 [ label="Condition: (\<not> (getVarBool ### ''inp_3''))" ];
  81 [ label="If start" ];
  82 [ label="if end" ];
  83 [ label="Blank node" ];
  84 [ label="Blank node" ];
  85 [ label="Condition: (getVarBool ### ''inp_1'')" ];
  86 [ label="Expression: (setVarBool ### ''out_1'' False)" ];
  87 [ label="If start" ];
  88 [ label="if end" ];
  89 [ label="Blank node" ];
  90 [ label="Blank node" ];
  91 [ label="Condition: (\<not> (getVarBool ### ''inp_2''))" ];
  92 [ label="Expression: (setVarBool ### ''out_0'' True)" ];
  93 [ label="Blank node" ];
  94 [ label="Blank node" ];
  95 [ label="Condition: (\<not> (\<not> (getVarBool ### ''inp_2'')))" ];
  96 [ label="Set state: Opening in opening" ];
  97 [ label="Blank node" ];
  98 [ label="Blank node" ];
  99 [ label="Condition: (\<not> (getVarBool ### ''inp_1''))" ];
  100 [ label="State start: stop" ];
  101 [ label="State end: stop" ];
  102 [ label="State start: error" ];
  103 [ label="State end: error" ];
  9 -> 11;
  11 -> 10;
  12 -> 13;
  10 -> 12;
  7 -> 9;
  13 -> 8;
  14 -> 16;
  16 -> 15;
  7 -> 14;
  15 -> 8;
  5 -> 7;
  8 -> 6;
  3 -> 5;
  6 -> 4;
  21 -> 23;
  23 -> 22;
  22 -> 24;
  19 -> 21;
  24 -> 20;
  25 -> 27;
  27 -> 26;
  19 -> 25;
  26 -> 20;
  17 -> 19;
  20 -> 18;
  3 -> 17;
  18 -> 4;
  28 -> 29;
  3 -> 28;
  29 -> 4;
  30 -> 31;
  3 -> 30;
  31 -> 4;
  36 -> 37;
  40 -> 42;
  42 -> 41;
  43 -> 44;
  44 -> 45;
  45 -> 46;
  41 -> 43;
  38 -> 40;
  46 -> 39;
  47 -> 49;
  49 -> 48;
  38 -> 47;
  48 -> 39;
  37 -> 38;
  34 -> 36;
  39 -> 35;
  32 -> 34;
  35 -> 33;
  54 -> 56;
  56 -> 55;
  55 -> 57;
  52 -> 54;
  57 -> 53;
  58 -> 60;
  60 -> 59;
  52 -> 58;
  59 -> 53;
  64 -> 65;
  65 -> 66;
  66 -> 67;
  63 -> 64;
  61 -> 63;
  67 -> 62;
  61 -> 68;
  68 -> 62;
  53 -> 61;
  50 -> 52;
  62 -> 51;
  32 -> 50;
  51 -> 33;
  73 -> 75;
  75 -> 74;
  76 -> 77;
  74 -> 76;
  71 -> 73;
  77 -> 72;
  78 -> 80;
  80 -> 79;
  83 -> 85;
  85 -> 84;
  89 -> 91;
  91 -> 90;
  90 -> 92;
  87 -> 89;
  92 -> 88;
  93 -> 95;
  95 -> 94;
  87 -> 93;
  94 -> 88;
  86 -> 87;
  88 -> 96;
  84 -> 86;
  81 -> 83;
  96 -> 82;
  97 -> 99;
  99 -> 98;
  81 -> 97;
  98 -> 82;
  79 -> 81;
  71 -> 78;
  82 -> 72;
  69 -> 71;
  72 -> 70;
  32 -> 69;
  70 -> 33;
  100 -> 101;
  32 -> 100;
  101 -> 33;
  102 -> 103;
  32 -> 102;
  103 -> 33;
  4 -> 32;
  1 -> 3;
  33 -> 2;
}
